% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pGate.R
\name{pGate}
\alias{pGate}
\title{Create Arbitrary Gate from Lattice Panel}
\usage{
pGate(type = c("arbitrary", "parallel", "convex", "ellipse"),
  vertical = TRUE, horizontal = FALSE, filterId = NULL,
  adjust.ellipse.distance = sqrt(2))
}
\arguments{
\item{type}{Type of gate as a character string (see details)}

\item{vertical, horizontal}{Logical values to impose vertical or
horizontal boundaries for \code{type = "parallel"} gate
(default values of \code{vertical = TRUE} and
\code{horizontal = FALSE})}

\item{filterId}{A character vector to identify this filter.}

\item{adjust.ellipse.distance}{Fudge factor for
\code{\link{ellipsoidGate}} (default of \code{sqrt(2)})}
}
\value{
A \code{polygonGate} or \code{ellipsoidGate} object is returned of the  
same dimensions as the active lattice graph.
}
\description{
Interact with lattice plot to define a gate
}
\details{
This function is called after an \code{xyplot} of flow data in order
to define a gate. 
The user will select a panel, which will be redrawn and used to select
points that define the gate for the data in the remaining panels
(flow set).
The type of gate is specific by the argument \code{type} and can be
one of the following character strings. Only the first letter is
required since partial matching is used to assign the value.

\tabular{ll}{
	\code{"arbitrary"} \tab The selected points will define the vertices of an 
		arbitrary polygon. \cr
	\code{"parallel"} \tab A parallelogram specified by 3 points with optional 
		vertical and horizontal constraints specified by \code{vertical} and
		\code{horizontal}. \cr
	\code{"convex"} \tab The convex hull of the selected points. \cr
	\code{"ellipse"} \tab The ellipsoid hull (minimal ellipse) encompassing the
		selected points. \cr
}

The implementation of \code{\link{ellipsoidGate}} does not seem to honor 
the covariance parameters, so the distance parameter has been arbitrarily  
adjusted by the square root of 2 to make up for this quirk.
}
