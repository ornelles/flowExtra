% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/peakAdjust.R
\name{peakAdjust}
\alias{peakAdjust}
\title{Translate and Scale Linear Data}
\usage{
peakAdjust(
  fs,
  chan = "FL2.A",
  peaks,
  g1 = 200,
  ratio = 1.92,
  limits = NULL,
  ...
)
}
\arguments{
\item{fs}{A \code{flowSet} with data to be transformed in channel in \code{chan}}

\item{chan}{Character vector to specify the channel to normalize (\code{"FL2.A"})}

\item{peaks}{An optional matrix of "G1" and "G2/M" peak values \emph{or} a
vector of "G1" values. If missing, \code{\link[=peakFind]{peakFind()}} to identify the peaks
within the range specified by \code{range.search}}

\item{g1}{Value of the rescaled G1 peak (\code{200})}

\item{ratio}{G2 to G1 ratio to place missing peaks "G1" peaks given
a corresponding "G2/M" peak, default value of \code{1.90}}

\item{limits}{Optional numeric vector of length 2 specifying the limits
for the transformed data. If \code{NULL}, the instrument range for data in
\code{chan} will be used. If \code{FALSE} the range will be \code{-Inf} to \code{+Inf}.}

\item{...}{Optional arguments passed to \code{\link[=peakFind]{peakFind()}} and then to
\code{\link[flowStats:curv1Filter]{flowStats::curv1Filter()}} including \code{range.search}, \code{probs},
\code{bwFac} and \code{gridsize}}

\item{range.search}{A numeric vector of length 2 specifying the range
of values in the original data in which peaks will be accepted. The
default value of \code{c(50, 500)} is chosen to ignore apoptotic values and
polyploid peaks in typical data}
}
\value{
A transformed and scaled \code{flowSet}.
}
\description{
Scale linear DNA content to have identical "G1" peak values
}
\details{
This function scales linear DNA content in \code{chan}
to align peaks corresponding to a "G1" population
of cells. Data will be adjusted by scaling the values
in each \code{flowFrame} to place the "G1" peak at the value in \code{g1}.

The position of the actual "G1" population (and "G2/M" population)
is provided in the optional argument \code{peaks}. This can either be a
vector of "G1" peak positions or a matrix of "G1" and "G2/M" peak
positions. A larger matrix will be accepted, such as one produced
with \code{\link[=peakFind]{peakFind()}}, but only the first two columns will be used and
treated as "G1" and "G2/M" positions, respectively. Missing values in
"G1" that have a "G2/M" value will be replaced by a value derived
from \code{ratio}. If the argument \code{peaks} is missing, the function
\code{\link[=peakFind]{peakFind()}} will be called with arguments \code{range.search} and \code{...}
to identify the peaks.

Transformed values will be trimmed to the range specified by
\code{limits} or the instrument range for \code{chan} if \code{limits = NULL}.
No trimming will occur if \code{limits = FALSE}.
}
\examples{
 fs <- readSet(system.file("extdata", "synch/", package = "flowExtra"))
 bf <- boundaryFilter("FL2.A")
 lg <- linearGate(fs)
 fs <- Subset(fs, bf & lg)
 o1 <- dnaplot(~FL2.A, fs, xlim = c(120, 380), main = "Raw", plot = FALSE)
 pks <- peakFind(fs, range.search = c(100, 400))
 fs.adj <- peakAdjust(fs, peaks = pks, g1 = 180)
 o2 <- dnaplot(~FL2.A, fs.adj, xlim = c(120, 380), main = "Adjusted", plot = FALSE)
 plot(o1, split = c(1, 1, 2, 1), more = TRUE)
 plot(o2, split = c(2, 1, 2, 1), more = FALSE)

}
